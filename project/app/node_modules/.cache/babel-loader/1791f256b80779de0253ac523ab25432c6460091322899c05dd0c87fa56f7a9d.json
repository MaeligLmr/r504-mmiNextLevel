{"ast":null,"code":"var _jsxFileName = \"C:\\\\iut_local\\\\res504\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './index.css'; // Import de Tailwind CSS\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { loadFormations } from './features/formation/formationAsyncAction';\nimport Accueil from './components/Accueil';\nimport { selectErrorLoad, selectFormations, selectLoading } from './features/formation/formationSelector';\nimport FormationList from './components/FormationList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectErrorLoad);\n  useEffect(() => {\n    return () => {\n      dispatch(loadFormations());\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MMI NEXT LEVEL :)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Accueil, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2,\n          mx: 'auto',\n          width: '80%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement des donn\\xE9es \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(FormationList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ZUK5LtLBnerujH4eS/2yspHRdeQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useDispatch","useSelector","useEffect","loadFormations","Accueil","selectErrorLoad","selectFormations","selectLoading","FormationList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","loading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Alert","severity","sx","mb","mx","width","_c","$RefreshReg$"],"sources":["C:/iut_local/res504/src/App.jsx"],"sourcesContent":["import logo from './logo.svg';\r\nimport './index.css'; // Import de Tailwind CSS\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { loadFormations } from './features/formation/formationAsyncAction';\r\nimport Accueil from './components/Accueil';\r\nimport { selectErrorLoad, selectFormations, selectLoading } from './features/formation/formationSelector';\r\nimport FormationList from './components/FormationList';\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(selectLoading);\r\n  const error = useSelector(selectErrorLoad);\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(loadFormations());\r\n    };\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n    <header>\r\n      <h1>MMI NEXT LEVEL :)</h1>\r\n    </header>\r\n    <main>\r\n    <Accueil></Accueil>\r\n    {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2, mx: 'auto', width: '80%' }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {loading ? (\r\n          <p>Chargement des donn√©es </p>\r\n        )\r\n          :\r\n          (\r\n            <>\r\n            \r\n              <FormationList ></FormationList>\r\n            </>\r\n          )\r\n        }\r\n    </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,aAAa,CAAC,CAAC;AACtB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,2CAA2C;AAC1E,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,eAAe,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ,wCAAwC;AACzG,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,OAAO,GAAGf,WAAW,CAACM,aAAa,CAAC;EAC1C,MAAMU,KAAK,GAAGhB,WAAW,CAACI,eAAe,CAAC;EAC1CH,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXa,QAAQ,CAACZ,cAAc,CAAC,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,CAACY,QAAQ,CAAC,CAAC;EACd,oBACEL,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACAR,OAAA;MAAAQ,QAAA,eACER,OAAA;QAAAQ,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACTZ,OAAA;MAAAQ,QAAA,gBACAR,OAAA,CAACN,OAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,EAClBL,KAAK,iBACAP,OAAA,CAACa,KAAK;QAACC,QAAQ,EAAC,OAAO;QAACC,EAAE,EAAE;UAAEC,EAAE,EAAE,CAAC;UAAEC,EAAE,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAV,QAAA,EAC7DD;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR,EACAN,OAAO,gBACNN,OAAA;QAAAQ,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAI5BZ,OAAA,CAAAE,SAAA;QAAAM,QAAA,eAEER,OAAA,CAACF,aAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB;MAAC,gBAChC,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA,eACL,CAAC;AAEP;AAACR,EAAA,CAnCQD,GAAG;EAAA,QACOb,WAAW,EACZC,WAAW,EACbA,WAAW;AAAA;AAAA4B,EAAA,GAHlBhB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}