{"ast":null,"code":"var _jsxFileName = \"C:\\\\iut_local\\\\res504\\\\src\\\\components\\\\FormationList.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormationRow from './FormationRow';\nimport FilterForm from './FilterForm';\nimport { useMemo, useState } from 'react';\nimport { selectFormations } from '../features/formation/formationSelector';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormationList() {\n  _s();\n  const [filters, setFilters] = useState([]); // State pour les filtres actifs\n  const formationList = useSelector(selectFormations);\n  const filteredFormations = useMemo(() => {\n    if (filters.length === 0) return formationList;\n    const filterFunc = formation => filters.every(filter => {\n      if (filter.type === \"master\") {\n        return formation.masters.some(master => filter.function(master));\n      } else {\n        return filter.function(formation);\n      }\n    });\n    console.log(formationList.filter(filterFunc));\n    return formationList.filter(filterFunc);\n  }, [formationList, filters]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FilterForm, {\n      onFilter: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredFormations.map(formation => /*#__PURE__*/_jsxDEV(FormationRow, {\n        formation: formation\n      }, formation._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(FormationList, \"rjPoeFhtULz3YXqf91GHo/ndbKY=\", false, function () {\n  return [useSelector];\n});\n_c = FormationList;\nexport default FormationList;\nvar _c;\n$RefreshReg$(_c, \"FormationList\");","map":{"version":3,"names":["useDispatch","useSelector","FormationRow","FilterForm","useMemo","useState","selectFormations","jsxDEV","_jsxDEV","Fragment","_Fragment","FormationList","_s","filters","setFilters","formationList","filteredFormations","length","filterFunc","formation","every","filter","type","masters","some","master","function","console","log","children","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","map","_id","_c","$RefreshReg$"],"sources":["C:/iut_local/res504/src/components/FormationList.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport FormationRow from './FormationRow';\r\nimport FilterForm from './FilterForm';\r\nimport { useMemo, useState } from 'react';\r\nimport { selectFormations } from '../features/formation/formationSelector';\r\n\r\nfunction FormationList() {\r\n    const [filters, setFilters] = useState([]); // State pour les filtres actifs\r\n    const formationList = useSelector(selectFormations);\r\n    const filteredFormations = useMemo(() => {\r\n        if (filters.length === 0) return formationList; \r\n        const filterFunc = (formation) => filters.every((filter) => {\r\n            if(filter.type === \"master\")\r\n                {\r\n                    return formation.masters.some((master) => filter.function(master))\r\n                } else {\r\n                    return filter.function(formation)\r\n                }});\r\n                console.log(formationList.filter(filterFunc))\r\n        return formationList.filter(filterFunc);\r\n      }, [formationList, filters]);\r\n    \r\n    return (\r\n        <>\r\n              <FilterForm onFilter={setFilters} />\r\n\r\n            <ul>\r\n                {filteredFormations.map((formation)=>\r\n                    <FormationRow key={formation._id} formation={formation}></FormationRow>\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default FormationList;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACzC,SAASC,gBAAgB,QAAQ,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3E,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAMU,aAAa,GAAGd,WAAW,CAACK,gBAAgB,CAAC;EACnD,MAAMU,kBAAkB,GAAGZ,OAAO,CAAC,MAAM;IACrC,IAAIS,OAAO,CAACI,MAAM,KAAK,CAAC,EAAE,OAAOF,aAAa;IAC9C,MAAMG,UAAU,GAAIC,SAAS,IAAKN,OAAO,CAACO,KAAK,CAAEC,MAAM,IAAK;MACxD,IAAGA,MAAM,CAACC,IAAI,KAAK,QAAQ,EACvB;QACI,OAAOH,SAAS,CAACI,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKJ,MAAM,CAACK,QAAQ,CAACD,MAAM,CAAC,CAAC;MACtE,CAAC,MAAM;QACH,OAAOJ,MAAM,CAACK,QAAQ,CAACP,SAAS,CAAC;MACrC;IAAC,CAAC,CAAC;IACHQ,OAAO,CAACC,GAAG,CAACb,aAAa,CAACM,MAAM,CAACH,UAAU,CAAC,CAAC;IACrD,OAAOH,aAAa,CAACM,MAAM,CAACH,UAAU,CAAC;EACzC,CAAC,EAAE,CAACH,aAAa,EAAEF,OAAO,CAAC,CAAC;EAE9B,oBACIL,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACMrB,OAAA,CAACL,UAAU;MAAC2B,QAAQ,EAAEhB;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtC1B,OAAA;MAAAqB,QAAA,EACKb,kBAAkB,CAACmB,GAAG,CAAEhB,SAAS,iBAC9BX,OAAA,CAACN,YAAY;QAAqBiB,SAAS,EAAEA;MAAU,GAApCA,SAAS,CAACiB,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsC,CAC1E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACP,CAAC;AAEX;AAACtB,EAAA,CA3BQD,aAAa;EAAA,QAEIV,WAAW;AAAA;AAAAoC,EAAA,GAF5B1B,aAAa;AA4BtB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}