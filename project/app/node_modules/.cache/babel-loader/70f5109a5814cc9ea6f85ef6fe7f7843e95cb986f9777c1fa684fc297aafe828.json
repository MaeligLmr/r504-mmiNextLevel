{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { load } from './adminAsyncAction';\nconst adminSlice = createSlice({\n  name: 'admin',\n  initialState: {\n    univ: [],\n    isAdmin: true,\n    editing: false,\n    idUnivEdited: null\n  },\n  reducers: {\n    startEdit(state, action) {\n      state.editing = true;\n      state.idUnivEdited = action.payload;\n    },\n    stopEdit(state) {\n      state.editing = false;\n      state.idUnivEdited = null;\n    }\n  },\n  errors: {\n    apiErrorLoad: null\n  },\n  extraReducers: builder => {\n    builder.addCase(load.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(load.fulfilled, (state, action) => {\n      state.univ = action.payload;\n      state.loading = false;\n    }).addCase(load.rejected, (state, action) => {\n      console.log(action.error.message);\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  startEdit,\n  stopEdit\n} = adminSlice.actions;\nexport default adminSlice.reducer;","map":{"version":3,"names":["createSlice","load","adminSlice","name","initialState","univ","isAdmin","editing","idUnivEdited","reducers","startEdit","state","action","payload","stopEdit","errors","apiErrorLoad","extraReducers","builder","addCase","pending","loading","fulfilled","rejected","console","log","error","message","actions","reducer"],"sources":["C:/iut_local/res504/src/features/admin/adminSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { load } from './adminAsyncAction';\r\n\r\nconst adminSlice = createSlice({\r\n    name: 'admin',\r\n    initialState: {\r\n        univ:[],\r\n        isAdmin: true,\r\n        editing: false,\r\n        idUnivEdited: null\r\n    },\r\n    reducers: {\r\n        startEdit(state, action){\r\n            state.editing = true;\r\n            state.idUnivEdited = action.payload;\r\n       },\r\n       stopEdit(state){\r\n            state.editing = false;\r\n            state.idUnivEdited = null;\r\n       }\r\n    },\r\n    errors: {\r\n        apiErrorLoad: null,\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(load.pending, (state, action)=> {\r\n            state.loading = true;\r\n       })\r\n       .addCase(load.fulfilled, (state, action)=> {\r\n            state.univ = action.payload;\r\n            state.loading = false;\r\n       })\r\n       .addCase(load.rejected, (state, action)=> {\r\n            console.log(action.error.message);\r\n            state.loading = false;\r\n       })\r\n    }\r\n})\r\n\r\nexport const { startEdit, stopEdit } = adminSlice.actions;\r\nexport default adminSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,QAAQ,oBAAoB;AAEzC,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC3BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,IAAI,EAAC,EAAE;IACPC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE,KAAK;IACdC,YAAY,EAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAC;MACpBD,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACH,YAAY,GAAGI,MAAM,CAACC,OAAO;IACxC,CAAC;IACDC,QAAQA,CAACH,KAAK,EAAC;MACVA,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,YAAY,GAAG,IAAI;IAC9B;EACH,CAAC;EACDO,MAAM,EAAE;IACJC,YAAY,EAAE;EAClB,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAAClB,IAAI,CAACmB,OAAO,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAI;MAC5CD,KAAK,CAACU,OAAO,GAAG,IAAI;IACzB,CAAC,CAAC,CACDF,OAAO,CAAClB,IAAI,CAACqB,SAAS,EAAE,CAACX,KAAK,EAAEC,MAAM,KAAI;MACtCD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACU,OAAO,GAAG,KAAK;IAC1B,CAAC,CAAC,CACDF,OAAO,CAAClB,IAAI,CAACsB,QAAQ,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAI;MACrCY,OAAO,CAACC,GAAG,CAACb,MAAM,CAACc,KAAK,CAACC,OAAO,CAAC;MACjChB,KAAK,CAACU,OAAO,GAAG,KAAK;IAC1B,CAAC,CAAC;EACL;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,SAAS;EAAEI;AAAS,CAAC,GAAGZ,UAAU,CAAC0B,OAAO;AACzD,eAAe1B,UAAU,CAAC2B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}