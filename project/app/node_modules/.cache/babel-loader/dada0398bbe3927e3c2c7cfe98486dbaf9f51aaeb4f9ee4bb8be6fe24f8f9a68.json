{"ast":null,"code":"var _jsxFileName = \"C:\\\\iut_local\\\\res504\\\\src\\\\components\\\\FormationList.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormationRow from './FormationRow';\nimport FilterForm from './FilterForm';\nimport { useMemo, useState } from 'react';\nimport { selectFormations, selectMasters } from '../features/formation/formationSelector';\nimport { filterIncludes, filterIncludesArray } from '../utils/filters';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormationList() {\n  _s();\n  const [filters, setFilters] = useState([]); // State pour les filtres actifs\n  const formationList = useSelector(selectFormations);\n  const masterList = useSelector(selectMasters);\n  const filteredFormations = useMemo(() => {\n    if (filters.length === 0) return formationList;\n    const filterFunc = formation => filters.every(filter => {\n      if (filter.type === \"master\") {\n        return formation.masters.some(master => filter.function(master));\n      } else if (filter.type === \"masterKeywords\") {\n        const filteredMasters = masterList.filter(master => filter.function(master));\n        console.log(filteredMasters);\n        const filteredMastersId = filteredMasters.map(master => master._idMaster);\n        filteredMastersId.every(masterId => {\n          return formation.masters.some(master => filterIncludesArray('_idMaster')(masterId)(master));\n        });\n      } else {\n        return filter.function(formation);\n      }\n    });\n    return formationList.filter(filterFunc);\n  }, [formationList, filters]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FilterForm, {\n      onFilter: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredFormations.map(formation => /*#__PURE__*/_jsxDEV(FormationRow, {\n        formation: formation\n      }, formation._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(FormationList, \"cIRxrmiXgHtWUYAVHwjh/DwLyRo=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = FormationList;\nexport default FormationList;\nvar _c;\n$RefreshReg$(_c, \"FormationList\");","map":{"version":3,"names":["useDispatch","useSelector","FormationRow","FilterForm","useMemo","useState","selectFormations","selectMasters","filterIncludes","filterIncludesArray","jsxDEV","_jsxDEV","Fragment","_Fragment","FormationList","_s","filters","setFilters","formationList","masterList","filteredFormations","length","filterFunc","formation","every","filter","type","masters","some","master","function","filteredMasters","console","log","filteredMastersId","map","_idMaster","masterId","children","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","_id","_c","$RefreshReg$"],"sources":["C:/iut_local/res504/src/components/FormationList.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport FormationRow from './FormationRow';\r\nimport FilterForm from './FilterForm';\r\nimport { useMemo, useState } from 'react';\r\nimport { selectFormations, selectMasters } from '../features/formation/formationSelector';\r\nimport { filterIncludes, filterIncludesArray } from '../utils/filters';\r\n\r\nfunction FormationList() {\r\n    const [filters, setFilters] = useState([]); // State pour les filtres actifs\r\n    const formationList = useSelector(selectFormations);\r\n    const masterList = useSelector(selectMasters);\r\n    const filteredFormations = useMemo(() => {\r\n        if (filters.length === 0) return formationList; \r\n        const filterFunc = (formation) => filters.every((filter) => {\r\n            if(filter.type === \"master\")\r\n                {\r\n                    return formation.masters.some((master) => filter.function(master))\r\n                } else if (filter.type === \"masterKeywords\"){\r\n                    const filteredMasters = masterList.filter((master) => filter.function(master));\r\n                    console.log(filteredMasters);\r\n                    const filteredMastersId = filteredMasters.map((master) => master._idMaster);\r\n                    filteredMastersId.every((masterId) =>{\r\n                            return formation.masters.some((master) => filterIncludesArray('_idMaster')(masterId)(master))\r\n\r\n                    })\r\n                }\r\n                else {\r\n                    return filter.function(formation)\r\n                }});\r\n        return formationList.filter(filterFunc);\r\n      }, [formationList, filters]);\r\n    \r\n    return (\r\n        <>\r\n              <FilterForm onFilter={setFilters} />\r\n\r\n            <ul>\r\n                {filteredFormations.map((formation)=>\r\n                    <FormationRow key={formation._id} formation={formation}></FormationRow>\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default FormationList;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACzC,SAASC,gBAAgB,EAAEC,aAAa,QAAQ,yCAAyC;AACzF,SAASC,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvE,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAMa,aAAa,GAAGjB,WAAW,CAACK,gBAAgB,CAAC;EACnD,MAAMa,UAAU,GAAGlB,WAAW,CAACM,aAAa,CAAC;EAC7C,MAAMa,kBAAkB,GAAGhB,OAAO,CAAC,MAAM;IACrC,IAAIY,OAAO,CAACK,MAAM,KAAK,CAAC,EAAE,OAAOH,aAAa;IAC9C,MAAMI,UAAU,GAAIC,SAAS,IAAKP,OAAO,CAACQ,KAAK,CAAEC,MAAM,IAAK;MACxD,IAAGA,MAAM,CAACC,IAAI,KAAK,QAAQ,EACvB;QACI,OAAOH,SAAS,CAACI,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKJ,MAAM,CAACK,QAAQ,CAACD,MAAM,CAAC,CAAC;MACtE,CAAC,MAAM,IAAIJ,MAAM,CAACC,IAAI,KAAK,gBAAgB,EAAC;QACxC,MAAMK,eAAe,GAAGZ,UAAU,CAACM,MAAM,CAAEI,MAAM,IAAKJ,MAAM,CAACK,QAAQ,CAACD,MAAM,CAAC,CAAC;QAC9EG,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC;QAC5B,MAAMG,iBAAiB,GAAGH,eAAe,CAACI,GAAG,CAAEN,MAAM,IAAKA,MAAM,CAACO,SAAS,CAAC;QAC3EF,iBAAiB,CAACV,KAAK,CAAEa,QAAQ,IAAI;UAC7B,OAAOd,SAAS,CAACI,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKpB,mBAAmB,CAAC,WAAW,CAAC,CAAC4B,QAAQ,CAAC,CAACR,MAAM,CAAC,CAAC;QAErG,CAAC,CAAC;MACN,CAAC,MACI;QACD,OAAOJ,MAAM,CAACK,QAAQ,CAACP,SAAS,CAAC;MACrC;IAAC,CAAC,CAAC;IACX,OAAOL,aAAa,CAACO,MAAM,CAACH,UAAU,CAAC;EACzC,CAAC,EAAE,CAACJ,aAAa,EAAEF,OAAO,CAAC,CAAC;EAE9B,oBACIL,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACM3B,OAAA,CAACR,UAAU;MAACoC,QAAQ,EAAEtB;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtChC,OAAA;MAAA2B,QAAA,EACKlB,kBAAkB,CAACe,GAAG,CAAEZ,SAAS,iBAC9BZ,OAAA,CAACT,YAAY;QAAqBqB,SAAS,EAAEA;MAAU,GAApCA,SAAS,CAACqB,GAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsC,CAC1E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACP,CAAC;AAEX;AAAC5B,EAAA,CApCQD,aAAa;EAAA,QAEIb,WAAW,EACdA,WAAW;AAAA;AAAA4C,EAAA,GAHzB/B,aAAa;AAqCtB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}