{"ast":null,"code":"// faire les selector de toutes les formations + le selector des formations filtrées\nexport const selectFormations = state => state.formations.formations;\nexport const selectTotalFormations = state => state.formations.formations.length;\nexport const selectLoading = state => state.formations.loading;\nexport const selectEditing = state => state.formations.isEditing;\nexport const selectSortedFormationsByReleaseDate = state => {\n  return [...state.formations.formations].sort((a, b) => new Date(b.releaseDate) - new Date(a.releaseDate));\n};\nexport const selectFormTitle = state => {\n  return state.formations.currentId === null ? \"Ajouter un Formation\" : \"Modifier un Formation\";\n};\nexport const selectInitialFormValues = state => {\n  if (state.formations.currentId === null) {\n    return null;\n  } else return state.formations.formations.find(formation => formation.id === state.formations.currentId);\n};\nexport const selectErrorLoad = state => state.films.errors.apiErrorLoad;","map":{"version":3,"names":["selectFormations","state","formations","selectTotalFormations","length","selectLoading","loading","selectEditing","isEditing","selectSortedFormationsByReleaseDate","sort","a","b","Date","releaseDate","selectFormTitle","currentId","selectInitialFormValues","find","formation","id","selectErrorLoad","films","errors","apiErrorLoad"],"sources":["C:/iut_local/res504/src/features/formation/formationSelector.js"],"sourcesContent":["// faire les selector de toutes les formations + le selector des formations filtrées\r\nexport const selectFormations = (state) => state.formations.formations;\r\nexport const selectTotalFormations = (state) => state.formations.formations.length;\r\nexport const selectLoading = (state) => state.formations.loading;\r\nexport const selectEditing = (state) => state.formations.isEditing;\r\nexport const selectSortedFormationsByReleaseDate = (state) => {\r\n    return [...state.formations.formations].sort((a, b) => new Date(b.releaseDate) - new Date(a.releaseDate));\r\n  };\r\nexport const selectFormTitle = (state) =>{\r\n    return state.formations.currentId === null ? \"Ajouter un Formation\" : \"Modifier un Formation\";\r\n\r\n}\r\nexport const selectInitialFormValues = (state)=>{\r\n    if(state.formations.currentId === null){\r\n        return null\r\n    }else return state.formations.formations.find((formation)=> formation.id === state.formations.currentId)\r\n}\r\nexport const selectErrorLoad = (state) => state.films.errors.apiErrorLoad;\r\n\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,gBAAgB,GAAIC,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACA,UAAU;AACtE,OAAO,MAAMC,qBAAqB,GAAIF,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACA,UAAU,CAACE,MAAM;AAClF,OAAO,MAAMC,aAAa,GAAIJ,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACI,OAAO;AAChE,OAAO,MAAMC,aAAa,GAAIN,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACM,SAAS;AAClE,OAAO,MAAMC,mCAAmC,GAAIR,KAAK,IAAK;EAC1D,OAAO,CAAC,GAAGA,KAAK,CAACC,UAAU,CAACA,UAAU,CAAC,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,WAAW,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,WAAW,CAAC,CAAC;AAC3G,CAAC;AACH,OAAO,MAAMC,eAAe,GAAId,KAAK,IAAI;EACrC,OAAOA,KAAK,CAACC,UAAU,CAACc,SAAS,KAAK,IAAI,GAAG,sBAAsB,GAAG,uBAAuB;AAEjG,CAAC;AACD,OAAO,MAAMC,uBAAuB,GAAIhB,KAAK,IAAG;EAC5C,IAAGA,KAAK,CAACC,UAAU,CAACc,SAAS,KAAK,IAAI,EAAC;IACnC,OAAO,IAAI;EACf,CAAC,MAAK,OAAOf,KAAK,CAACC,UAAU,CAACA,UAAU,CAACgB,IAAI,CAAEC,SAAS,IAAIA,SAAS,CAACC,EAAE,KAAKnB,KAAK,CAACC,UAAU,CAACc,SAAS,CAAC;AAC5G,CAAC;AACD,OAAO,MAAMK,eAAe,GAAIpB,KAAK,IAAKA,KAAK,CAACqB,KAAK,CAACC,MAAM,CAACC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}