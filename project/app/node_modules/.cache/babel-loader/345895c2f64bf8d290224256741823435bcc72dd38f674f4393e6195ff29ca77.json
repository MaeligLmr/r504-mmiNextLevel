{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addFormation, deleteFormation, loadFormations, updateFormation } from './formationAsyncAction';\nconst formationSlice = createSlice({\n  name: 'formation',\n  initialState: {\n    formations: [],\n    loading: false,\n    currentId: null,\n    errors: {\n      apiErrorLoad: null\n    }\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loadFormations.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(loadFormations.fulfilled, (state, action) => {\n      state.loading = false;\n      state.formations = action.payload;\n    }).addCase(loadFormations.rejected, (state, action) => {\n      state.errors.apiErrorLoad = action.payload || \"Erreur lors du chargement des formations\";\n      state.loading = action.false;\n    });\n  }\n});\nexport default formationSlice.reducer;","map":{"version":3,"names":["createSlice","addFormation","deleteFormation","loadFormations","updateFormation","formationSlice","name","initialState","formations","loading","currentId","errors","apiErrorLoad","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","false","reducer"],"sources":["C:/iut_local/res504/src/features/formation/formationSlice.js"],"sourcesContent":["import {\r\n    createSlice\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n    addFormation,\r\n    deleteFormation,\r\n    loadFormations,\r\n    updateFormation\r\n} from './formationAsyncAction';\r\n\r\nconst formationSlice = createSlice({\r\n    name: 'formation',\r\n    initialState: {\r\n        formations: [],\r\n        loading: false,\r\n        currentId: null,\r\n        errors: {\r\n            apiErrorLoad: null,\r\n        },\r\n    },\r\n    reducers: {\r\n\r\n\r\n    },\r\n\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(loadFormations.pending, (state, action) => {\r\n                state.loading = true;\r\n            })\r\n            .addCase(loadFormations.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.formations = action.payload;\r\n            })\r\n            .addCase(loadFormations.rejected, (state, action) => {\r\n                state.errors.apiErrorLoad = action.payload || \"Erreur lors du chargement des formations\";\r\n                state.loading = action.false;\r\n            })\r\n\r\n    }\r\n})\r\n\r\n\r\nexport default formationSlice.reducer;"],"mappings":"AAAA,SACIA,WAAW,QACR,kBAAkB;AACzB,SACIC,YAAY,EACZC,eAAe,EACfC,cAAc,EACdC,eAAe,QACZ,wBAAwB;AAE/B,MAAMC,cAAc,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACVC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE,IAAI;IACfC,MAAM,EAAE;MACJC,YAAY,EAAE;IAClB;EACJ,CAAC;EACDC,QAAQ,EAAE,CAGV,CAAC;EAEDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACb,cAAc,CAACc,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACT,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDO,OAAO,CAACb,cAAc,CAACiB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACT,OAAO,GAAG,KAAK;MACrBS,KAAK,CAACV,UAAU,GAAGW,MAAM,CAACE,OAAO;IACrC,CAAC,CAAC,CACDL,OAAO,CAACb,cAAc,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACP,MAAM,CAACC,YAAY,GAAGO,MAAM,CAACE,OAAO,IAAI,0CAA0C;MACxFH,KAAK,CAACT,OAAO,GAAGU,MAAM,CAACI,KAAK;IAChC,CAAC,CAAC;EAEV;AACJ,CAAC,CAAC;AAGF,eAAelB,cAAc,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}