{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addFormation, deleteFormation, loadFormations, updateFormation } from './formationAsyncAction';\nconst formationSlice = createSlice({\n  name: 'formation',\n  initialState: {\n    formations: [],\n    loading: false,\n    currentId: null\n  },\n  reducers: {},\n  errors: {\n    apiErrorLoad: null\n  },\n  extraReducers: builder => {\n    builder.addCase(loadFormations.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(loadFormations.fulfilled, (state, action) => {\n      state.loading = false;\n      state.formations = action.payload;\n    }).addCase(loadFormations.rejected, (state, action) => {\n      state.errors.apiErrorLoad = action.payload || \"Erreur lors du chargement des formations\";\n      state.loading = action.false;\n    });\n  }\n});\nexport default formationSlice.reducer;","map":{"version":3,"names":["createSlice","addFormation","deleteFormation","loadFormations","updateFormation","formationSlice","name","initialState","formations","loading","currentId","reducers","errors","apiErrorLoad","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","false","reducer"],"sources":["C:/iut_local/res504/src/features/formation/formationSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { addFormation, deleteFormation, loadFormations, updateFormation } from './formationAsyncAction';\r\n\r\nconst formationSlice = createSlice({\r\n    name: 'formation',\r\n    initialState: {\r\n    formations : [],\r\n       loading : false,\r\n       currentId : null\r\n\r\n    },\r\n    reducers: {\r\n        \r\n       \r\n    },\r\n    errors: {\r\n        apiErrorLoad: null,\r\n        },\r\n    extraReducers: (builder) => {\r\n       builder\r\n            .addCase(loadFormations.pending, (state, action)=>{\r\n                state.loading = true;\r\n            })\r\n            .addCase(loadFormations.fulfilled, (state, action)=>{\r\n                state.loading = false;\r\n                state.formations = action.payload;\r\n            })\r\n            .addCase(loadFormations.rejected, (state, action)=>{\r\n                state.errors.apiErrorLoad = action.payload || \"Erreur lors du chargement des formations\";\r\n                state.loading = action.false;\r\n            })\r\n\r\n    }\r\n})\r\n\r\n\r\nexport default formationSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,EAAEC,eAAe,EAAEC,cAAc,EAAEC,eAAe,QAAQ,wBAAwB;AAEvG,MAAMC,cAAc,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACdC,UAAU,EAAG,EAAE;IACZC,OAAO,EAAG,KAAK;IACfC,SAAS,EAAG;EAEf,CAAC;EACDC,QAAQ,EAAE,CAGV,CAAC;EACDC,MAAM,EAAE;IACJC,YAAY,EAAE;EACd,CAAC;EACLC,aAAa,EAAGC,OAAO,IAAK;IACzBA,OAAO,CACDC,OAAO,CAACb,cAAc,CAACc,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAG;MAC9CD,KAAK,CAACT,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDO,OAAO,CAACb,cAAc,CAACiB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAG;MAChDD,KAAK,CAACT,OAAO,GAAG,KAAK;MACrBS,KAAK,CAACV,UAAU,GAAGW,MAAM,CAACE,OAAO;IACrC,CAAC,CAAC,CACDL,OAAO,CAACb,cAAc,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAG;MAC/CD,KAAK,CAACN,MAAM,CAACC,YAAY,GAAGM,MAAM,CAACE,OAAO,IAAI,0CAA0C;MACxFH,KAAK,CAACT,OAAO,GAAGU,MAAM,CAACI,KAAK;IAChC,CAAC,CAAC;EAEV;AACJ,CAAC,CAAC;AAGF,eAAelB,cAAc,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}