{"ast":null,"code":"var _jsxFileName = \"C:\\\\iut_local\\\\res504\\\\src\\\\components\\\\FormationList.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormationRow from './FormationRow';\nimport FilterForm from './FilterForm';\nimport { useEffect, useMemo, useState } from 'react';\nimport { selectFormations } from '../features/formation/formationSelector';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormationList() {\n  _s();\n  const [filters, setFilters] = useState([]); // State pour les filtres actifs\n  const formationList = useSelector(selectFormations);\n  const [width, setWidth] = useState(window.innerWidth);\n  const filteredFormations = useMemo(() => {\n    if (filters.length === 0) return formationList;\n    const filterFunc = formation => filters.every(filter => filter(formation));\n    return formationList.filter(filterFunc);\n  }, [formationList, filters]);\n  function handleResize() {\n    setWidth(window.innerWidth);\n  }\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: width > 1024 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 px-8\",\n      children: [/*#__PURE__*/_jsxDEV(FilterForm, {\n        onFilter: setFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"col-span-3\",\n        children: filteredFormations.map(formation => /*#__PURE__*/_jsxDEV(FormationRow, {\n          formation: formation\n        }, formation._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FilterForm, {\n        onFilter: setFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"formations grid grid-cols-2 lg:grid-cols-1 gap-5 w-full lg:w-2/3 z-5\",\n        children: filteredFormations.map(formation => /*#__PURE__*/_jsxDEV(FormationRow, {\n          formation: formation\n        }, formation._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(FormationList, \"7s8uqii2nYWagOcsxXZ2rVLKOY4=\", false, function () {\n  return [useSelector];\n});\n_c = FormationList;\nexport default FormationList;\nvar _c;\n$RefreshReg$(_c, \"FormationList\");","map":{"version":3,"names":["useDispatch","useSelector","FormationRow","FilterForm","useEffect","useMemo","useState","selectFormations","jsxDEV","_jsxDEV","Fragment","_Fragment","FormationList","_s","filters","setFilters","formationList","width","setWidth","window","innerWidth","filteredFormations","length","filterFunc","formation","every","filter","handleResize","addEventListener","removeEventListener","children","className","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","map","_id","_c","$RefreshReg$"],"sources":["C:/iut_local/res504/src/components/FormationList.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport FormationRow from './FormationRow';\r\nimport FilterForm from './FilterForm';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { selectFormations } from '../features/formation/formationSelector';\r\n\r\nfunction FormationList() {\r\n    const [filters, setFilters] = useState([]); // State pour les filtres actifs\r\n    const formationList = useSelector(selectFormations);\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n\r\n    const filteredFormations = useMemo(() => {\r\n        if (filters.length === 0) return formationList;\r\n        const filterFunc = (formation) => filters.every((filter) => filter(formation));\r\n        return formationList.filter(filterFunc);\r\n    }, [formationList, filters]);\r\n\r\n    function handleResize() {\r\n        setWidth(window.innerWidth)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            {width > 1024\r\n                ?\r\n                <div className='grid grid-cols-4 px-8'>\r\n                    <FilterForm onFilter={setFilters} />\r\n\r\n                    <ul className='col-span-3'>\r\n                        {filteredFormations.map((formation) =>\r\n                            <FormationRow key={formation._id} formation={formation}></FormationRow>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                :\r\n                <>\r\n                    <FilterForm onFilter={setFilters} />\r\n\r\n                    <ul className=\"formations grid grid-cols-2 lg:grid-cols-1 gap-5 w-full lg:w-2/3 z-5\">\r\n                        {filteredFormations.map((formation) =>\r\n                            <FormationRow key={formation._id} formation={formation}></FormationRow>\r\n                        )}\r\n                    </ul>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default FormationList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}